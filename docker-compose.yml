services:
# WatchTower
  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--label-enable"
      - "--interval"
      - "3600"
      - "--rolling-restart"
    networks:
      - traefik-server
# Traefik
  traefik:
    image: ghcr.io/benja-m24/traefik-servermanager:lts
    ports:
      - 80:80 # HTTP port
      - 443:443 # HTTPS port
      - 443:443/udp # HTTP/3 port
      # SMTP ports
      - 25:25
      - 143:143 # No SSL/TLS
      - 465:465 # SSL/TLS
      - 587:587 # Submission STARTTLS
      - 993:993 # IMAP STARTTLS
    restart: always
    labels:
      # WatchTower monitoring testing
      - com.centurylinklabs.watchtower.enable=true
      - com.centurylinklabs.watchtower.scope=main-images
      # Traefik configuration
      - traefik.enable=true
      - traefik.docker.network=traefik-server

      # Middleware configuration
      ## 1 - HTTPS redirect middleware
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      ## 2 - security-headers middleware
      - traefik.http.middlewares.security-headers.headers.sslredirect=true
      - traefik.http.middlewares.security-headers.headers.stsincludesubdomains=true
      - traefik.http.middlewares.security-headers.headers.stspreload=true
      - traefik.http.middlewares.security-headers.headers.customresponseheaders.X-Content-Type-Options=nosniff
      - traefik.http.middlewares.security-headers.headers.customresponseheaders.X-Frame-Options=SAMEORIGIN
      - traefik.http.middlewares.security-headers.headers.customresponseheaders.X-XSS-Protection=1; mode=block
      - traefik.http.middlewares.security-headers.headers.customresponseheaders.Referrer-Policy=strict-origin-when-cross-origin
      ## 3 - HTTP Basic Auth middleware
      - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}
      ## 4 - Rate limiting middleware
      - traefik.http.middlewares.metrics-ratelimit.ratelimit.average=30
      - traefik.http.middlewares.metrics-ratelimit.ratelimit.burst=50
      
      # HTTP router configuration for Traefik dashboard
      ## HTTP router
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.${DOMAIN?Variable not set}`)
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.${DOMAIN?Variable not set}`)
      - traefik.http.routers.traefik-dashboard-https.tls=true
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      ## Aplicate middlewares
      - traefik.http.routers.traefik-dashboard-https.middlewares=https-redirect,security-headers,admin-auth

      # HTTP router configuration for Traefik metrics
      ## HTTP router
      - traefik.http.routers.metrics.rule=Host(`metrics.${DOMAIN}`)
      - traefik.http.routers.metrics.entrypoints=https
      - traefik.http.routers.metrics.tls=true
      - traefik.http.routers.metrics.tls.certresolver=le
      - traefik.http.routers.metrics.service=metrics@internal
      - traefik.http.services.metrics.loadbalancer.server.port=8082
      # Protección básica (recomendado)
      - traefik.http.routers.metrics.middlewares=auth-metrics,security-headers,metrics-ratelimit
      - traefik.http.middlewares.auth-metrics.basicauth.users=${USERNAME}:${HASHED_PASSWORD}

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Docker socket for reading service labels
      - traefik-server-certificates:/certificates # Certificate storage
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CF_API_TOKEN}  # Token Cloudflare DNS:Edit
    command:
      - --log.level=DEBUG
      # Smtp configuration
      - --providers.docker.network=traefik-server
      - --entrypoints.smtp.address=:25/tcp
      - --entrypoints.smtps.address=:465/tcp
      - --entrypoints.submission.address=:587/tcp
      - --entrypoints.imap.address=:143/tcp
      - --entrypoints.imaps.address=:993/tcp
      # Entrypoints configuration
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.metrics.address=:8082
      # HTTP redirection configuration
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      # HTTP/3
      - --entrypoints.https.http3=true
      - --http.transport.http2.maxConcurrentStreams=100
      - --entrypoints.https.tls.minVersion=VersionTLS13
      ## TODO CREATE A FILE TO IMPROVE SECURITY HEADERS https://securityheaders.com/
      - --entrypoints.https.tls.options=modern@file
      # Metrics configuration
      - --metrics.prometheus.manualRouting=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addserviceslabels=true
      - --metrics.prometheus.addRoutersLabels=true
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --metrics.prometheus.addSystemMetrics=true  # CPU/Memoria
      - --metrics.prometheus.addGoMetrics=true      # GC/Memstats
      # Docker provider configuration
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      # Let's Encrypt configuration
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL?Variable not set}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.dnschallenge=true
      - --certificatesresolvers.le.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.le.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.le.acme.dnschallenge.delaybeforecheck=60
      - --certificatesresolvers.le.acme.keytype=EC384
      # Optimiize Traefik performance
      - --serversTransport.maxIdleConnsPerHost=10
      - --serversTransport.dialTimeout=10s
      # Logging and API configuration
      - --accesslog
      - --log
      - --api
    networks:
      - traefik-server # Public network for Traefik and other services
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "ping"]
      interval: 10s
      timeout: 2s
      retries: 3

volumes:
  traefik-server-certificates: # Persistent volume for certificates

networks:
  traefik-server:
    name: traefik-server
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: 172.64.1.0/24  # IPv4
        - subnet: fd00:1::/64    # IPv6
